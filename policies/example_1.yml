cryptomesh: v1

services:
  s_security:
    policy:
      roles: ["security_manager"]
      requires_authentication: true
      
    microservices:
      cipher_ops:
        policy:
          roles: ["cipher"]
        resources: 
          ram: "2GB"
          cpu: 2
          
        functions:
          
          encrypt_data:
            image: "rory:liu-encrypt"
            resources:
              ram: "1GB"
              cpu: 1
            storage:
              capacity: "10GB"
              source:
                path: "/mictlanx/local"
              sink:
                path: "/mictlanx/remote"
                bucket_id: "encrypt_data_bucket"
             

          decrypt_data:
            image: "rory:liu-decrypt"
            resources:
              ram: "1GB"
              cpu: 1
            storage:
              capacity: "10GB"
              source:
                path: "/mictlanx/local"
              sink:
                path: "/mictlanx/remote"
                bucket_id: "decrypt_data_bucket"
  
  s_ml:
    policy:
      roles: ["ml_analyst"]
      requires_authentication: true
    microservices:
      ml_clustering:
        policy:
          roles: ["ml_operator"]
        resources:
          ram: "4GB"
          cpu: 4
        functions:
          skmean:
            image: "rory:skmean"
            resources:
              ram: "2GB"
              cpu: 2
            storage:
              capacity: "15GB"
              source:
                path: "/ml/input"
              sink:
                path: "/ml/output"
          plotting:
            image: "rory:plotting"
            resources:
              ram: "1GB"
              cpu: 1
            storage:
              capacity: "5GB"
              source:
                path: "/mictlanx/local"
              sink:
                path: "/mictlanx/remote"
            
connections: 
  - from: "s_security.cipher_ops.encrypt_data"
    to: 
      - "s_ml.ml_clustering.skmeans"
    condition: "Start"
    event: "SkmeansDone"
  - from: "s_ml.ml_clustering.skmeans"
    to: 
      - "s_security.cipher_ops.decrypt_data"
      - "s_ml.ml_kmeans.plotting"
    condition: "SkmeansDone"